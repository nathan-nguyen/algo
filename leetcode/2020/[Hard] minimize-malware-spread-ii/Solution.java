class Solution {
    public int minMalwareSpread(int[][] g, int[] init) {
        int n = g.length;

        int minIdxNode = Integer.MAX_VALUE;
        int maxCount = Integer.MAX_VALUE;
        for (int k: init) {
            boolean [] visited = new boolean[n];
            int count = 0;
            for (int i: init) count += dfs(k, i, g, visited, n);
            if (count < maxCount || (count == maxCount && minIdxNode > k)) {
                minIdxNode = k;
                maxCount = count;
            }
        }

        return minIdxNode;
    }

    private int dfs(int k, int i, int[][] g, boolean[] visited, int n) {
        if (i == k || visited[i]) return 0;
        visited[i] = true;
        int result = 1;
        for (int x = 0; x < n; ++x) if (g[i][x] == 1) result += dfs(k, x, g, visited, n);
        return result;
    }
}
